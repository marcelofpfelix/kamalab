#!KAMAILIO

#!defenvs KAMA_LISTEN
listen=KAMA_LISTEN
auto_aliases=no

loadmodule "tm"
loadmodule "tmx"
loadmodule "xlog"
loadmodule "pv"
loadmodule "sl"
loadmodule "textops"
loadmodule "rr"

modparam("pv", "shvset", "shv_a=s:")

#!define MYINT 123

request_route {
    // Enable record_routing so we see the BYE / Re-INVITE etc
    record_route();

    xlog("Got a request $rm to $ru\n");

    $var(a) = "var_a Hello, World!";
    $shv(a) = "shv_a Hello, World!";
    $avp(a) = "avp_a Hello, World!";

    xlog("request $$var(a): $var(a)\n");
    xlog("request $$shv(a): $shv(a)\n");
    xlog("request $$avp(a): $avp(a)\n\n");

    xlog("yooo MYINT\n");


    t_on_reply("TM_REPLY");
    t_on_failure("TM_FAILURE");


    // if ($Rp == ENV_WS_PORT){

    // } else {
    //     rewritehostport("192.168.1.161:5063");
    // }

    // Relay a message statefully either to the destination indicated in the current
    // URI (if called without any parameters) or to the specified host and port.
    t_relay_to_udp("127.0.0.3", "5060");


    #if (!t_relay()) {
    #    xlog("L_ERR", "[$ci] Failed relaying message to $ru\n");
    #    sl_reply_error();
    #}
}

reply_route{
    // this route will always run first

    xlog("Got a reply $rs $rm\n");

    xlog("reply $$var(a): $var(a)\n");
    xlog("reply $$shv(a): $shv(a)\n");
    xlog("reply $$avp(a): $avp(a)\n\n");

    append_hf("X-Proxy: reply\r\n");
}

onreply_route[TM_REPLY] {
        // replies from route[TM_REPLY]

        xlog("Got a TM_REPLY $rs $rm\n");

        xlog("TM_REPLY $$var(a): $var(a)\n");
        xlog("TM_REPLY $$shv(a): $shv(a)\n");
        xlog("TM_REPLY $$avp(a): $avp(a)\n\n");

        append_hf("X-Proxy: TM_REPLY\r\n");
}

failure_route[TM_FAILURE]{
        xlog("At failure route $T_reply_code\n");

    if (t_check_status("[3456]..")) {
        xlog("ERRRRRRRRR $T_reply_code\n");
    }

        t_reply("500", "Remote end never got back to us");
        exit;
}

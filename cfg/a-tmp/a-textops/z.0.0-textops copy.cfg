#!KAMAILIO

// testing body parsing and manipulation

#!defenvs KAMA_LISTEN
listen=KAMA_LISTEN
auto_aliases=no

loadmodule "xlog"
loadmodule "pv"
loadmodule "sl"
loadmodule "textops"
loadmodule "textopsx"

request_route {
    $var(name) = "Hello, World!";

    if(has_body("application/sdp")) {
        $var(name) = "Hello, SDP!";
    }
    if(has_body("application/xml")) {
        xlog("XML\n");
        $var(name) = "Hello, XML!";
    }
    if(has_body("multipart/mixed")) {
        $var(name) = "Hello, MIME!";

        get_body_part("application/sdp", "$var(sdp)");

        // remove rubbish
        $var(sdp) = $(var(sdp){re.subst,/^Content-Length:.*//ig});
        $var(sdp) = $(var(sdp){s.trim});

        xlog("$$var(sdp): ---$var(sdp)---\n");

        set_body("$var(sdp)", "application/sdp");



        // // remove_hf("Content-Length");
        // if (filter_body("application/sdp")) {
        //     xlog("filtering SDP\n");

        //     remove_hf("Content-Type");

        //     append_hf("Content-Type: application/sdp\r\n");
        // #    append_hf("Content-Length: 100\r\n");
        // } else {
        //     xlog("Body part application/sdp not found\n");
        // }
        // if ( subst_body('/^Content-Length:.*//ig') ) {
        //     xlog("Content-Length changed\n");
        // } else {
        //     xlog("Content-Length not found\n");
        // }
        // if ( subst_body('/[\r\n]+//gs') ) {
        //     xlog("newline changed\n");
        // } else {
        //     xlog("newline not found\n");
        // }



        // set_body_multipart("test", "text/plain", "delimiter");
        // get_body_part("application/pidf+xml", "$var(pidf)");
        // application/pidf+xml
        // remove_body_part("application/pidf+xml");

        // set_body_multipart("test", "application/sdp");
        msg_apply_changes();

        //$var(sdp) = $(mb{s.striptail,2});
        //xlog("$$var(sdp): $var(sdp)\n");
        // set_body("$var(sdp)", "application/sdp");

        // xlog("$$var(pidf): $var(pidf)\n");





        xlog("MIME\n");
    }
    if(has_body("application/pidf+xml")) {
        $var(name) = "Hello, PIDF!";
        xlog("PIDF\n");
    }

    xlog("$$var(name): $var(name)\n");

    sl_send_reply(200, "OK $var(name)");
    forward("192.168.1.196", 5060);
}

